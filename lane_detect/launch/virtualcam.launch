
<launch>

  <!--
  To distinguish between the cases where the rgb image is
  1280x1024 versus 640x480.  This affects the pipeline.
  -->
  <arg name="high_res_rgb" default="false"/>
  <arg name="cloud_input_ns" value="/team1/camera/rgb_downsampled" if="$(arg high_res_rgb)"/>
  <arg name="cloud_input_ns" value="/team1/camera/rgb" unless="$(arg high_res_rgb)"/>

  <arg name="camera" value="/team1/camera" />

  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
		<param name="port" value="9090"/>
	</include>

  <node name="fakeinfo" type="virtualcamera_node" pkg="virtualcamera" output="screen" args="_image_transport:=compressed"/>
  <node name="republish_color" type="republish" pkg="image_transport" output="screen" args="compressed in:=$(arg camera)/rgb raw out:=$(arg camera)/rgb/image_raw" />


  <node name="depth_converter" type="convert_depth_node" pkg="virtualcamera" output="screen" args="_image_transport:=compressed">
    <remap from="depth_input" to="$(arg camera)/depth" />
    <remap from="depth_output" to="$(arg camera)/depth/uint16_converted" />
  </node>

  <!-- Nodelet manager for this pipeline -->
  <node pkg="nodelet" type="nodelet" args="manager" name="record_player_manager" output="screen"/>

  <!-- Debayer and undistort the rgb image
       TODO: this should be split into nodelets -->
  <node pkg="image_proc" type="image_proc" name="ip_node1" ns="/team1/camera/rgb" args="_image_transport:=compressed" />

  
  <!-- The depth image is already rectified and registered
       to the camera optical frame, but stored in mm; convert it
       to meters -->
  <node pkg="nodelet" type="nodelet" name="metric_rect" 
        args="load depth_image_proc/convert_metric record_player_manager --no-bond">
    <remap from="image_raw" to="/team1/camera/depth/uint16_converted"/>
    <remap from="image" to="/team1/camera/depth/image"/>
  </node>
  
  <!-- Downsample and crop rgb image before converting to cloud, if it's high res -->
  <node pkg="nodelet" type="nodelet" name="downsample_rgb" args="load image_proc/crop_decimate record_player_manager --no-bond" if="$(arg high_res_rgb)">
    <param name="decimation_x" value="2"/>
    <param name="decimation_y" value="2"/>
    <param name="width" value="1280"/>
    <param name="height" value="960"/>
    <remap from="camera" to="$(arg camera)/rgb"/>
    <remap from="camera_out" to="$(arg cloud_input_ns)"/>
    <remap from="camera/rgb/image_raw" to="$(arg camera)/rgb/image_rect_color"/>
    <remap from="$(arg cloud_input_ns)/image_raw" to="$(arg cloud_input_ns)/image_rect_color"/>
  </node>

  <!-- Convert it into a point cloud -->
  <node pkg="nodelet" type="nodelet" name="cloudify"
        args="load depth_image_proc/point_cloud_xyzrgb record_player_manager --no-bond">
    <remap from="depth_registered/points" to="/team1/camera/depth_registered/points"/>

    <remap from="/depth_registered/image_rect" to="/team1/camera/depth/image"/>
    <remap from="/rgb/image_rect_color" to="/team1/camera/rgb/image_rect_color"/>
    <remap from="/rgb/camera_info" to="/team1/camera/rgb/camera_info"/>
  </node>

</launch>